name: Publish docs

on: [push]

env:
  PIP_CACHE_DIR: ~/.cache/pip
  DOXYGEN_VERSION: 1.8.17

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Clone private submodules FIXME
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_ACTIONS_PAT }}
        repository: exabl/Nek5000
        ref: develop
        path: lib/Nek5000

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip requirements
      id: pip-cache
      uses: actions/cache@v1
      with:
        path: ${{ env.PIP_CACHE_DIR }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache doxygen
      id: doxygen-cache
      uses: actions/cache@v1
      with:
        path: ./doxygen-${{ env.DOXYGEN_VERSION }}
        key: ${{ runner.os }}-doxygen-${{ env.DOXYGEN_VERSION }}
        restore-keys: |
          ${{ runner.os }}-doxygen-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install .
        if [ ! -d "doxygen-${DOXYGEN_VERSION}" ]; then
          curl -LO http://doxygen.nl/files/doxygen-${DOXYGEN_VERSION}.linux.bin.tar.gz
          tar -xf doxygen-${DOXYGEN_VERSION}.linux.bin.tar.gz
        fi

    - name: Build docs
      run: |
        export PATH="${GITHUB_WORKSPACE}/doxygen-${DOXYGEN_VERSION}/bin":${PATH}
        cd docs
        make html
        touch _build/html/.nojekyll

    - name: Deploy to GitHub Pages
      if: success()
      uses: peaceiris/actions-gh-pages@v2.8.0
      env:
        ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./docs/_build/html
